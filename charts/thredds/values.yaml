# Default values for thredds.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

initImage:
  repository: satapps/init-thredds
  tag: '851fae8'
  pullPolicy: IfNotPresent

image:
  repository: unidata/thredds-docker
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

sidecar:
  image:
    repository: satapps/csvs-thredds-sidecar
    tag: '0.15'
    pullPolicy: IfNotPresent
  awsConcurrentRequests: 1

pvc:
  configuration:
    storageClassName: portworx-csi-sc-retain
    namespace: dev-csvs
    name: thredds
  netcdfMontlyYearly:
    name: era5-data-monthly-yearly
    namespace: dev-csvs
    storageClassName: portworx-csi-sc-retain
  netcdfDaily1:
    name: era5-data-daily-part-1
    namespace: dev-csvs
    storageClassName: portworx-csi-sc-retain
  netcdfDaily2:
    name: era5-data-daily-part-2
    namespace: dev-csvs
    storageClassName: portworx-csi-sc-retain
  netcdfDaily3:
    name: era5-data-daily-part-3
    namespace: dev-csvs
    storageClassName: portworx-csi-sc-retain
  era5LandData:
    name: era5-land-data
    namespace: dev-csvs
    storageClassName: portworx-csi-sc-retain
  trmmData:
    name: trmm-data
    namespace: dev-csvs
    storageClassName: portworx-csi-sc-retain
  ncepData:
    name: ncep-data
    namespace: dev-csvs
    storageClassName: portworx-csi-sc-retain
  gpcpData:
    name: gpcp-data
    namespace: dev-csvs
    storageClassName: portworx-csi-sc-retain
  cruData:
    name: cru-data
    namespace: dev-csvs
    storageClassName: portworx-csi-sc-retain
  cmapData:
    name: cmap-data
    namespace: dev-csvs
    storageClassName: portworx-csi-sc-retain

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8081

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

livenessProbe:
  enabled: false
  initialDelaySeconds: 15
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

readinessProbe:
  enabled: false
  initialDelaySeconds: 15
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

awsAccessKeyId: test
awsSecretAccessKey: test
