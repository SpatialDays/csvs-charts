# {{- if .Values.backup.enabled -}}
# apiVersion: batch/v1beta1
# kind: CronJob
# metadata:
#   name: geoserver-backup
# spec:
#   schedule: "0 0 * * *"
#   jobTemplate:
#     spec:
# {{- with .Values.backup.ttlSecondsAfterFinished }}
#       ttlSecondsAfterFinished: {{ . }}
# {{- end }}
#       template:
#         spec:
#           containers:
#           - name: geoserver-backup
#             image: "{{ .Values.backup.repository }}:{{ .Values.backup.tag }}"
#             imagePullPolicy: {{ .Values.backup.pullPolicy }}
#             env:
#                 - name: AWS_ACCESS_KEY_ID
#                   valueFrom:
#                     secretKeyRef:
#                       name: {{ include "geoserver.fullname" . }}
#                       key: aws-access-key-id
#                 - name: AWS_SECRET_ACCESS_KEY
#                   valueFrom:
#                     secretKeyRef:
#                       name: {{ include "geoserver.fullname" . }}
#                       key: aws-secret-access-key
#                 - name: S3_BUCKET
#                   value: {{ .Values.backup.s3bucket }}
#                 - name: AWS_DEFAULT_REGION
#                   value: eu-west-1
#                 - name: GEOSERVER_USERNAME
#                   valueFrom:
#                     secretKeyRef:
#                       name: {{ include "geoserver.fullname" . }}
#                       key: geoserver-username
#                 - name: GEOSERVER_PASSWORD
#                   valueFrom:
#                     secretKeyRef:
#                       name: {{ include "geoserver.fullname" . }}
#                       key: geoserver-password
#                 - name: S3_URL
#                   value: {{ .Values.backup.s3url }}
#                 - name: GEOSERVER_URL
#                   value: "http://{{ include "geoserver.fullname" . }}:{{ .Values.service.port }}"
#                 - name: NAMESPACE
#                   value: {{ .Values.backup.namespace }}
#           restartPolicy: OnFailure
# {{- end -}}
